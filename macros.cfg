#####################################################################
#   Macros
#####################################################################
[delayed_gcode SET_LED_ON_STARTUP]
initial_duration: 1
gcode:
    SB_LED_WHITE


[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z{th.position.z+30}

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    CG28                      ; Home if not homed to get everything turned on
    QUAD_GANTRY_LEVEL         ; Level
    #G28 X Y                  ; Home the X and Y
    #G0 X130 Y305 Z2 F9000     ; Move to brush
    #G0 X75 F750               ; Move across the brush
    #G0 X130 F750              ; Move across the brush
    G28 Z                     ; Home the Z now that nozzle is clean
    G0 X175 Y175 Z20 F6000    ; Return to center of bed


# Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}

[gcode_macro PURGE_BUCKET]
gcode:
    SAVE_GCODE_STATE NAME=PURGE
    G90                    ; absolute
    G0 X75 Y305 Z2         ; go to purge bucket
    G1 X25 E10 F500        ; purge some filament into bucket
    G1 X75 E3 F500         ; purge some filament into bucket
    G0 X120 Y305 F750      ; move across purge brush
    G1 E-2 F500            ; Retract a little
    G1 Z3                  ; Raise and return
    RESTORE_GCODE_STATE NAME=PURGE


[gcode_macro PRINT_START]
gcode:
    SB_LED_YELLOW
    SAVE_GCODE_STATE NAME=start
    G32
    M117 Starting warmup
    G1 Z20 F3000                       ; move nozzle away from bed
    M117 Adaptive bed mesh calibration
    BED_MESH_CALIBRATE ADAPTIVE=1
    
    M117 Warmup
    M190 S{params.BED|int}             ; set bed temp and wait for it reach temp
    M109 S{params.EXTRUDER|int}        ; M109 heat and wait for it to reach temp
    NEVERMORE_ON           
    
    G1 Z5 F5000                        ; move head 5mm from bed surface
    M83                                ; Make the E relative independant of other axis
    M117 Purging
    LINE_PURGE
    
    M117 Starting Print
    SB_LED_RED
    RESTORE_GCODE_STATE NAME=start


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0 X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    SB_LED_GREEN
    PARK
    UPDATE_DELAYED_GCODE ID=nevermore_off DURATION=240 ; turn off Nevermore after 4 mins

######################################################################
## Filament Change                                                  ##
######################################################################
# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 130mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "SWAP_RESUME" gcode.
[gcode_macro M600]
########### Gcode ############
gcode:
  {% set X = 0 %}
  {% set Y = 0 %}
  {% set Z = params.Z|default(10)|int %}
  {% set E = params.E|default(-20)|int %}
  {% set tool = params.tool|default(0)|int %}

        SAVE_GCODE_STATE NAME=M600_state
        PAUSE
        G91
        G1 E-5 F4000
        G1 Z{Z}
        G90
        G1 X{X} Y{Y} F3000        ;park position
        G0 E10 F500                ;extrude filament to get better blob on end
        G0 E{E} F600             ;retract additional filament to move out of melt zone
        G92 E0
        #SET_FILAMENT_SENSOR SENSOR=e{TOOL}_runout ENABLE=0

#    Use this command resume during a mid print filament swap (DONT USE OCTO/MAINSAIL/DWC RESUME)
[gcode_macro SWAP_RESUME] 
gcode:
    RESTORE_GCODE_STATE NAME=M600_state
    #SET_FILAMENT_SENSOR SENSOR=e0_runout ENABLE=1
    #SET_FILAMENT_SENSOR SENSOR=e1_runout ENABLE=1
    resume


[gcode_macro SB_LED_WHITE]
gcode:
  SET_LED LED=sb RED=1 GREEN=1 BLUE=1 INDEX=1
  SET_LED LED=sb RED=1 GREEN=1 BLUE=1 INDEX=2
  SET_LED LED=sb RED=1 GREEN=1 BLUE=1 INDEX=3

[gcode_macro SB_LED_GREEN]
gcode:
  SET_LED LED=sb RED=0 GREEN=1 BLUE=0 INDEX=1
  SET_LED LED=sb RED=0 GREEN=1 BLUE=0 INDEX=2
  SET_LED LED=sb RED=0 GREEN=1 BLUE=0 INDEX=3

[gcode_macro SB_LED_YELLOW]
gcode:
  SET_LED LED=sb RED=1 GREEN=1 BLUE=0 INDEX=1
  SET_LED LED=sb RED=1 GREEN=1 BLUE=0 INDEX=2
  SET_LED LED=sb RED=1 GREEN=1 BLUE=0 INDEX=3

[gcode_macro SB_LED_RED]
gcode:
  SET_LED LED=sb RED=1 GREEN=0 BLUE=0 INDEX=1
  SET_LED LED=sb RED=1 GREEN=0 BLUE=0 INDEX=2
  SET_LED LED=sb RED=1 GREEN=0 BLUE=0 INDEX=3

[gcode_macro DUMP_VARIABLES]
gcode:
    {% set filter_name = params.NAME|default('')|string|lower %}
    {% set filter_value = params.VALUE|default('')|string|lower %}
    {% set show_cfg = params.SHOW_CFG|default(0)|int %}
    
    {% set out = [] %}

    {% for key1 in printer %}
        {% for key2 in printer[key1] %}
            {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
            {% endif %}
        {% else %}
            {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    
    {action_respond_info(out|join("\n"))}


